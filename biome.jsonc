{
  "$schema": "https://biomejs.dev/schemas/2.0.6/schema.json",
  "assist": {
    "actions": {
      "source": {
        "organizeImports": "on",
        "useSortedAttributes": "on",
        "useSortedKeys": "on"
      }
    }
  },
  "files": {
    "ignoreUnknown": false,
    "includes": [
      "**",
      "!package.json",
      "!**/.next/**",
      "!**/node_modules/**",
      "!**/.turbo/**",
      "!**/build/**",
      "!**/dist/**"
    ]
  },
  "formatter": {
    "enabled": true,
    "indentStyle": "space" // i don't like tabs, but you can override this to `tab` if you want
  },
  "javascript": {
    "formatter": {
      "quoteStyle": "double", // default, no real opinion here
      "semicolons": "asNeeded" // makes things feel cleaner
    }
  },
  "linter": {
    "domains": {
      "next": "all",
      "project": "all",
      "react": "all"
    },
    "enabled": true,
    "rules": {
      "a11y": {
        "noStaticElementInteractions": "error", // static elements are more difficult to make interactive and properly accessible
        "useAriaPropsSupportedByRole": "error" // static elements are more difficult to make interactive and properly accessible
      },
      "complexity": {
        "noExcessiveCognitiveComplexity": "error",
        "noForEach": "error",
        "noUselessEscapeInRegex": "error",
        "noUselessStringConcat": "error",
        "noUselessUndefinedInitialization": "error",
        "useDateNow": "error",
        "useSimplifiedLogicExpression": "error",
        "useWhile": "error"
      },
      "correctness": {
        "noConstantMathMinMaxClamp": "error",
        "noUndeclaredVariables": "error",
        "noUnusedFunctionParameters": "error",
        "noUnusedImports": "error",
        "noUnusedPrivateClassMembers": "error",
        "noUnusedVariables": "error",
        "useHookAtTopLevel": "error"
      },
      "nursery": {
        "noSecrets": "error",
        "noShadow": "error", // should help you catch useless code/accidental drift
        "useSortedClasses": "warn" // should help you catch useless code/accidental drift
      },
      "performance": {
        "noDelete": "error", // it's a dangerous operator, use undefined instead
        "noDynamicNamespaceImportAccess": "error",
        "noNamespaceImport": "error", // difficult to tree shake
        "noReExportAll": "error",
        "useTopLevelRegex": "error"
      },
      "recommended": true,
      "security": {
        "noDangerouslySetInnerHtmlWithChildren": "error" // forces you to explain why you have no alternative to using this property, and think about potential sanitization issues
      },
      "style": {
        "noDefaultExport": "error",
        "noEnum": "error",
        "noInferrableTypes": "error",
        "noNonNullAssertion": "off",
        "noParameterAssign": "error",
        "noShoutyConstants": "error",
        "noSubstr": "error",
        "noUnusedTemplateLiteral": "error",
        "noUselessElse": "error",
        "noYodaExpression": "error",
        "useArrayLiterals": "error",
        "useAsConstAssertion": "error",
        "useAtIndex": "error",
        "useCollapsedIf": "error",
        "useConsistentArrayType": "error",
        "useConsistentBuiltinInstantiation": "error",
        "useDefaultParameterLast": "error",
        "useDefaultSwitchClause": "error",
        "useDeprecatedReason": "error",
        "useEnumInitializers": "error",
        "useExplicitLengthCheck": "error",
        "useFilenamingConvention": {
          "options": {
            "filenameCases": ["export", "kebab-case"] // personal preference
          }
        },
        "useFragmentSyntax": "error",
        "useNumberNamespace": "error",
        "useSelfClosingElements": "error",
        "useShorthandAssign": "error",
        "useSingleVarDeclarator": "error",
        "useThrowNewError": "error",
        "useThrowOnlyError": "error",
        "useTrimStartEnd": "error"
      },
      "suspicious": {
        "noAlert": "error",
        "noConsole": {
          "level": "error", // helps you not forget to remove console logs. useful for debug, but dangerous for prod
          "options": {
            "allow": ["assert", "error", "info", "warn"] // alternatively, this forces you to be more intentional about your logging
          }
        },
        "noDocumentCookie": "error",
        "noDocumentImportInPage": "error",
        "noDuplicateCustomProperties": "error",
        "noDuplicateElseIf": "error",
        "noDuplicateProperties": "error",
        "noEmptyBlockStatements": "error",
        "noEvolvingTypes": "error",
        "noTemplateCurlyInString": "error",
        "useAwait": "error", // forces you to be intentional about your async code
        "useErrorMessage": "error",
        "useNumberToFixedDigitsArgument": "error" // forces you to be intentional about your async code
      }
    }
  },
  "vcs": {
    "clientKind": "git",
    "enabled": false,
    "useIgnoreFile": false
  }
}
